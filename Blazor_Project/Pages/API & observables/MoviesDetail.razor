@page "/details/{MovieId}"
@using Blazor_Project.Services
@using Blazor_Project.Classes
@using System.Threading.Tasks
@inject NavigationManager NavigationManager
<link rel="stylesheet" href="css/MoviesDetail.css">

@if (selectedMovieDetails != null)
{
    <div class="MoviesDetail">
        <header class="MoviesDetail__header">
            <h2>@selectedMovieDetails.Title</h2>
            <div>
                Release date: <strong>@selectedMovieDetails.ReleaseDate</strong> -
                <span> Votes average: <strong>@selectedMovieDetails.VotesAverage</strong></span>
            </div>
        </header>
        <div class="MoviesDetail__img">
            <img src="@($"{api.ImagesUri}w300{selectedMovieDetails.PosterPath}")" alt="@selectedMovieDetails.Title" />
        </div>
        <div class="MoviesDetail__content">
            <div>
                <strong>Adult: </strong>
                <input type="checkbox" checked="@selectedMovieDetails.Adult" disabled />
            </div>
            <div>
                <strong>Original language:</strong> @selectedMovieDetails.Language
            </div>
            <div>
                <strong>Original title:</strong> @selectedMovieDetails.OriginalTitle
            </div>
            <div>
                <strong>Overview</strong>
                <br />
                @selectedMovieDetails.Overview
            </div>
        </div>
    </div>
}
else
{
    <h1>Loading...</h1>
}

@code {
    [Parameter] public string MovieId { get; set; }
    private IDisposable subscription;
    private MovieDetails selectedMovieDetails;
    private API api = new API();

    public MovieDetails SelectedMovieDetails
    {
        get { return selectedMovieDetails; }
        set { selectedMovieDetails = value; }
    }
    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(MovieId))
        {
            subscription?.Dispose(); 
            subscription = api.GetMovieDetails(MovieId)
                .Subscribe(result =>
                {
                    selectedMovieDetails = result;
                    StateHasChanged();
                });
        }
    }

    public void Dispose()
    {
        subscription?.Dispose();
    }
}