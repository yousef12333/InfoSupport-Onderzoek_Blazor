@page "/movies"
@using Blazor_Project.Classes
@using Blazor_Project.Services
@inject NavigationManager NavigationManager
<link rel="stylesheet" href="css/Movies.css">
<div class="MoviesSearch">
    <h1><NavLink href="/">Most Popular Movies</NavLink></h1>
    <input ref="@inputElement" placeholder="Start here..." @oninput="HandleTyping" @bind-value="searchTerm" />
    <ul class="MoviesSearch__list-group">
        @foreach (var movie in searchResults)
        {
            <li class="MoviesSearch__list-group-item">
                <NavLink href="@($"details/{movie.Id}")">
                    @movie.Title<span>(votes: @movie.VoteCount)</span>
                </NavLink>
               
            </li>
        }
    </ul>
</div>


@code {
    private ElementReference inputElement;
    [Parameter]
    public string searchTerm { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> searchTermChanged { get; set; }
    private List<Movie> searchResults = new List<Movie>();
    private API api = new API();
    private Movie movie { get; set; } = new Movie();

    private async Task HandleTyping(ChangeEventArgs e)
    {
        searchTerm = e.Value.ToString().Trim();
        if (searchTerm.Length >= 3)
        {
            await SearchMovies();
        }
        else
        {
            searchResults.Clear();
        }
    }

    private async Task SearchMovies()
    {
        var (originalTitles, voteCounts) = await api.Search(searchTerm);

        searchResults.Clear();

        for (int i = 0; i < originalTitles.Count; i++)
        {
            searchResults.Add(new Movie
                {
                    Id = await api.GetMovieIdByTitle(originalTitles[i]),
                    Title = originalTitles[i],
                    VoteCount = voteCounts[i]
                });
        }
    }
}