@using Blazor_Project.Services
@using Blazor_Project.Classes
<link rel="stylesheet" href="css/MoviesSearch.css">
<div class="MoviesSearch">
    <input class="MoviesSearch__input" ref="@inputElement" placeholder="Start here..." @oninput="HandleTyping" @bind-value="searchTerm" />
    <ul class="MoviesSearch__list-group">
        @foreach (var movie in searchResults)
        {
            <li class="MoviesSearch__list-group-item">
                <a class="MoviesSearch__link" href="/details/@movie.Id">@movie.Title<span class="MoviesSearch__vote-count">(votes: @movie.VoteCount)</span></a>
            </li>
        }
    </ul>
</div>

@code {
    private ElementReference inputElement;
    private IDisposable subscription;
    private string searchTerm = string.Empty;
    private List<Movie> searchResults = new List<Movie>();
    private API api = new API();

    private async Task HandleTyping(ChangeEventArgs e)
    {
        searchTerm = e.Value.ToString().Trim();
        if (searchTerm.Length >= 3)
        {
            await SearchMovies();
        }
        else
        {
            searchResults.Clear();
        }
    }

    private async Task SearchMovies()
    {
        subscription?.Dispose(); 
        subscription = api.Search(searchTerm)
            .Subscribe(result =>
            {
                var (originalTitles, voteCounts) = result;
                searchResults.Clear();
                for (int i = 0; i < originalTitles.Count; i++)
                {
                    searchResults.Add(new Movie
                        {
                            Title = originalTitles[i],
                            VoteCount = voteCounts[i]
                        });
                }
                StateHasChanged();
            });
    }

    public void Dispose()
    {
        subscription?.Dispose();
    }
}